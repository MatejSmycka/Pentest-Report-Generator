/*
codestyle: https://beautifier.io/
CVSS ver. 3.1
*/

function cvssCompute(AV, AC, PR, UI, S, C, I, A, metricLetterS) {
    var roundUp1 = function Roundup(input) {
        var int_input = Math.round(input * 100000);
        if (int_input % 10000 === 0) {
            return int_input / 100000
        } else {
            return (Math.floor(int_input / 10000) + 1) / 10
        }
    }
    let impactScoreAll = 0;
    let impactScoreCIA = (1 - ((1 - C) * (1 - I) * (1 - A)));
    if (metricLetterS == "U") {
        impactScoreAll = S * impactScoreCIA;
    } else {
        impactScoreAll = S * (impactScoreCIA - 0.029) - 3.25 * Math.pow(impactScoreCIA - 0.02, 15);
    }
    exploitability = 8.22 * AV * AC * PR * UI;
    if (impactScoreAll <= 0) {
        cvssScore = 0;
    } else {
        if (metricLetterS == "U") {
            cvssScore = roundUp1(Math.min(exploitability + impactScoreAll), 10)
        }
        else{
        var scopeCoefficient = 1.08;
        cvssScore = roundUp1(Math.min(exploitability + impactScoreAll) * scopeCoefficient, 10)
      }
    }

    if (cvssScore > 10) {
        cvssScore = 10
    }
    cvssScore = Math.round(cvssScore * 10) / 10
    return cvssScore
};


function cvssGenerator() {
    var metrics = {
        AV: {
            'N': 0.85,
            'A': 0.62,
            'L': 0.55,
            'P': 0.2
        },
        AC: {
            'H': 0.44,
            'L': 0.77
        },
        PR: {
            'U': {
                'N': 0.85,
                'L': 0.62,
                'H': 0.27
            },
            'C': {
                'N': 0.85,
                'L': 0.68,
                'H': 0.5
            }
        },
        UI: {
            'N': 0.85,
            'R': 0.62
        },
        C: {
            'N': 0,
            'L': 0.22,
            'H': 0.56
        },
        I: {
            'N': 0,
            'L': 0.22,
            'H': 0.56
        },
        A: {
            'N': 0,
            'L': 0.22,
            'H': 0.56
        },
        S: {
            'U': 6.42,
            'C': 7.52
        }
    };
    /* cvssScore RATING */
    cvssScore = cvssCompute(
        metrics['AV'][metricLetterAV],
        metrics['AC'][metricLetterAC],
        metrics['PR'][metricLetterS][metricLetterPR],
        metrics['UI'][metricLetterUI],
        metrics['S'][metricLetterS],
        metrics['C'][metricLetterC],
        metrics['I'][metricLetterI],
        metrics['A'][metricLetterA],
        metricLetterS);

    switch (true) {
        case (cvssScore >= 9):
            severity = 'Critical'
            color = 'red'
            break;
        case (cvssScore >= 7):
            severity = 'High'
            color = 'red'
            break;
        case (cvssScore >= 4):
            severity = 'Medium'
            color = 'orange'
            break;
        case (cvssScore > 0):
            severity = 'Low'
            color = 'green'
            break;
        default:
            severity = 'Info'
            color = 'cyan'
            break;
    }
}



function cvssFromForm() {
    /* HTML FORM COLLECT*/

    metricLetterAV = document.querySelector('input[name="AV"]:checked').value;
    metricLetterAC = document.querySelector('input[name="AC"]:checked').value;
    metricLetterPR = document.querySelector('input[name="PR"]:checked').value;
    metricLetterUI = document.querySelector('input[name="UI"]:checked').value;
    metricLetterS = document.querySelector('input[name="S"]:checked').value;
    metricLetterC = document.querySelector('input[name="C"]:checked').value;
    metricLetterI = document.querySelector('input[name="I"]:checked').value;
    metricLetterA = document.querySelector('input[name="A"]:checked').value;
    cvss1 =
        '(AV:' + metricLetterAV +
        '/AC:' + metricLetterAC +
        '/PR:' + metricLetterPR +
        '/UI:' + metricLetterUI +
        '/S:' + metricLetterS +
        '/C:' + metricLetterC +
        '/I:' + metricLetterI +
        '/A:' + metricLetterA + ')';


    name           = document.getElementById("name").value;
    businessImpact = document.getElementById("impact").value;
    description    = document.getElementById("desc").value;
    remediation    = document.getElementById("Remediation").value;
    resources      = document.getElementById("References").value;
    steps          = document.getElementById("Steps").value;
    role           = document.getElementById("role").value;
    host           = document.getElementById("host").value;
    impact         = document.getElementById("imp").value;
}


function main() {
    /*html form evalutaion*/
    cvssFromForm();

    /* cvssScore calculation from form data*/
    cvssGenerator();

    /* LaTex from generated and collected data*/
    let texNoformat = TexParser();
    let texFormatted = formatTex(texNoformat);
    let texWrapped = texWraping(texFormatted);
    /* output */
    document.write(texWrapped);
}
/* export for test integrations */
module.exports = { cvssCompute };
